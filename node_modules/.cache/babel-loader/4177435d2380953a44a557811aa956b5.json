{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Software\\\\CodewithMosh\\\\Practice\\\\Ethereum\\\\rajesh-react\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport web3 from \"./web3\";\nimport myBank from \"./myBank\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      owner: \"\",\n      totalBankBalance: \"\",\n      value: \"\",\n      message: \"\"\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n\n                _this.setState({\n                  message: \"We are processing your Withdraw...\"\n                });\n\n                _context.next = 7;\n                return myBank.methods.withdraw(_this.state.value).send({\n                  from: accounts[0]\n                });\n\n              case 7:\n                _this.setState({\n                  message: \"Withdraw successful...\"\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var owner, totalBankBalance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return myBank.methods.owner().call();\n\n              case 2:\n                owner = _context2.sent;\n                _context2.next = 5;\n                return web3.eth.getBalance(myBank.options.address);\n\n              case 5:\n                totalBankBalance = _context2.sent;\n                this.setState({\n                  owner: owner,\n                  totalBankBalance: totalBankBalance\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Bank\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"This Bank is managed by \", this.state.owner), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"My Wallet Address\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"My Wallet adress is \", this.state.owner, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"My Bank Balance\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"My Bank Balance is\", \" \", eth.accounts().then(function (accounts) {\n        var account = accounts[0];\n        return eth.getBalance(account);\n      }).then(function (balance) {\n        console.log(\"Your balance is \" + Eth.fromWei(balance, \"ether\"));\n      }), \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Bank Balance\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Total Balance in the Bank is\", \" \", web3.utils.fromWei(this.state.totalBankBalance, \"ether\"), \" ether!\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Enter the ethers to withdrawal....\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Withdrawal\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.message));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:\\Software\\CodewithMosh\\Practice\\Ethereum\\rajesh-react\\src\\App.js"],"names":["React","Component","web3","myBank","App","state","owner","totalBankBalance","value","message","onSubmit","event","preventDefault","eth","getAccounts","accounts","setState","methods","withdraw","send","from","call","getBalance","options","address","then","account","balance","console","log","Eth","fromWei","utils","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport web3 from \"./web3\";\r\nimport myBank from \"./myBank\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    owner: \"\",\r\n    totalBankBalance: \"\",\r\n    value: \"\",\r\n    message: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const owner = await myBank.methods.owner().call();\r\n    const totalBankBalance = await web3.eth.getBalance(myBank.options.address);\r\n    this.setState({ owner, totalBankBalance });\r\n  }\r\n\r\n  onSubmit = async event => {\r\n    event.preventDefault();\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.setState({ message: \"We are processing your Withdraw...\" });\r\n    await myBank.methods.withdraw(this.state.value).send({\r\n      from: accounts[0]\r\n    });\r\n    this.setState({ message: \"Withdraw successful...\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Bank</h2>\r\n        <p>This Bank is managed by {this.state.owner}</p>\r\n\r\n        <h2>My Wallet Address</h2>\r\n        <p>My Wallet adress is {this.state.owner} </p>\r\n\r\n        <h2>My Bank Balance</h2>\r\n        <p>\r\n          My Bank Balance is{\" \"}\r\n          {eth\r\n            .accounts()\r\n            .then(accounts => {\r\n              const account = accounts[0];\r\n              return eth.getBalance(account);\r\n            })\r\n            .then(balance => {\r\n              console.log(\"Your balance is \" + Eth.fromWei(balance, \"ether\"));\r\n            })}{\" \"}\r\n        </p>\r\n\r\n        <h2>Bank Balance</h2>\r\n        <p>\r\n          Total Balance in the Bank is{\" \"}\r\n          {web3.utils.fromWei(this.state.totalBankBalance, \"ether\")} ether!\r\n        </p>\r\n        <form onSubmit={this.onSubmit}>\r\n          <h2>Enter the ethers to withdrawal....</h2>\r\n          <div>\r\n            <input\r\n              value={this.state.value}\r\n              onChange={event => this.setState({ value: event.target.value })}\r\n            />\r\n          </div>\r\n          <button>Withdrawal</button>\r\n        </form>\r\n\r\n        <h1>{this.state.message}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}